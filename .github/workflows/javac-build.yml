# This is a basic workflow to help you get started with Actions

name: Javac Build and JUnit Test Verification

# Controls when the action will run. Triggers the workflow on pull request events
on: pull_request

# This workflow contains a two jobs: "build" and "test"
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo Branch
        uses: actions/checkout@v2

      # Installs the Java JDK
      - name: Install openjdk-11.0.8 (x64)
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.8 # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
        
      # Installs JUnit
      - name: Install JUnit
        run:
          sudo apt install wget;
          mkdir junit-5.6.2;
          cd junit-5.6.2;
          mkdir console;
          cd console;
          wget https://search.maven.org/remotecontent?filepath=org/junit/platform/junit-platform-console-standalone/1.6.2/junit-platform-console-standalone-1.6.2.jar;
          mv 'remotecontent?filepath=org%2Fjunit%2Fplatform%2Fjunit-platform-console-standalone%2F1.6.2%2Fjunit-platform-console-standalone-1.6.2.jar' junit-platform-console-standalone-1.6.2.jar;
          unzip junit-platform-console-standalone-1.6.2.jar -d junit-platform-console-standalone-1.6.2;
          # The following build out another part of the JUnit file structure, but they don't appear to be required...
          # Removed for now to streamline the build process and speed up tests, provided that tests still run without these files.
          # mkdir ../jupiter;
          # cd ../jupiter;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter/5.6.2/junit-jupiter-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter%2F5.6.2%2Fjunit-jupiter-5.6.2.jar' junit-jupiter-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-api%2F5.6.2%2Fjunit-jupiter-api-5.6.2.jar' junit-jupiter-api-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-engine/5.6.2/junit-jupiter-engine-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-engine%2F5.6.2%2Fjunit-jupiter-engine-5.6.2.jar' junit-jupiter-engine-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-migrationsupport/5.6.2/junit-jupiter-migrationsupport-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-migrationsupport%2F5.6.2%2Fjunit-jupiter-migrationsupport-5.6.2.jar' junit-jupiter-migrationsupport-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-params/5.6.2/junit-jupiter-params-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-params%2F5.6.2%2Fjunit-jupiter-params-5.6.2.jar' junit-jupiter-params-5.6.2.jar;
          # unzip junit-jupiter-api-5.6.2.jar -d junit-jupiter-api-5.6.2;
          # unzip junit-jupiter-params-5.6.2.jar -d junit-jupiter-params-5.6.2;
        # Note, we get the JARs file from getting the link from the public Maven website, then build the file structure.

      # Compile the Java code
      - name: Verify that all Java code compiles
        run: javac -d bin -sourcepath source -classpath junit-5.6.2/console/junit-platform-console-standalone-1.6.2.jar $(find -name *.java)
        # Note this uses command substitution and the find command from CSI 3660 Systems Admin I

  # Note: Test is a complete copy of build as transfering artifacts take longer than resetting the configureation does.
  test:
    # Wait for build to pass (if build fails, we don't have anything to test with)
    needs: build

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo Branch
        uses: actions/checkout@v2

      # Installs the Java JDK
      - name: Install openjdk-11.0.8 (x64)
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.8 # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
        
      # Installs JUnit
      - name: Install JUnit
        run:
          sudo apt install wget;
          mkdir junit-5.6.2;
          cd junit-5.6.2;
          mkdir console;
          cd console;
          wget https://search.maven.org/remotecontent?filepath=org/junit/platform/junit-platform-console-standalone/1.6.2/junit-platform-console-standalone-1.6.2.jar;
          mv 'remotecontent?filepath=org%2Fjunit%2Fplatform%2Fjunit-platform-console-standalone%2F1.6.2%2Fjunit-platform-console-standalone-1.6.2.jar' junit-platform-console-standalone-1.6.2.jar;
          unzip junit-platform-console-standalone-1.6.2.jar -d junit-platform-console-standalone-1.6.2;
          # The following build out another part of the JUnit file structure, but they don't appear to be required...
          # Removed for now to streamline the build process and speed up tests, provided that tests still run without these files.
          # mkdir ../jupiter;
          # cd ../jupiter;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter/5.6.2/junit-jupiter-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter%2F5.6.2%2Fjunit-jupiter-5.6.2.jar' junit-jupiter-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-api%2F5.6.2%2Fjunit-jupiter-api-5.6.2.jar' junit-jupiter-api-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-engine/5.6.2/junit-jupiter-engine-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-engine%2F5.6.2%2Fjunit-jupiter-engine-5.6.2.jar' junit-jupiter-engine-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-migrationsupport/5.6.2/junit-jupiter-migrationsupport-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-migrationsupport%2F5.6.2%2Fjunit-jupiter-migrationsupport-5.6.2.jar' junit-jupiter-migrationsupport-5.6.2.jar;
          # wget https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-params/5.6.2/junit-jupiter-params-5.6.2.jar;
          # mv 'remotecontent?filepath=org%2Fjunit%2Fjupiter%2Fjunit-jupiter-params%2F5.6.2%2Fjunit-jupiter-params-5.6.2.jar' junit-jupiter-params-5.6.2.jar;
          # unzip junit-jupiter-api-5.6.2.jar -d junit-jupiter-api-5.6.2;
          # unzip junit-jupiter-params-5.6.2.jar -d junit-jupiter-params-5.6.2;
        # Note, we get the JARs file from getting the link from the public Maven website, then build the file structure.

      # Compile the Java code
      - name: Verify that all Java code compiles
        run: javac -d bin -sourcepath source -classpath junit-5.6.2/console/junit-platform-console-standalone-1.6.2.jar $(find -name *.java)
        # Note this uses command substitution and the find command from CSI 3660 Systems Admin I
      
      # Run the JUnit tests
      - name: Verify that all JUnit tests pass
        run: java -classpath bin:junit-5.6.2/console/junit-platform-console-standalone-1.6.2.jar:junit-5.6.2/console/junit-platform-console-standalone-1.6.2.jar org.junit.platform.console.ConsoleLauncher --scan-classpath
